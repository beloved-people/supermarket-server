<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.wangshun.supermarketserver.mapper.InventoryGainLossDetailsMapper">
  <resultMap id="BaseResultMap" type="pers.wangshun.supermarketserver.model.InventoryGainLossDetails">
    <id column="inventory_counting_details_id" jdbcType="BIGINT" property="inventoryCountingDetailsId" />
    <id column="inventory_counting_info_number" jdbcType="BIGINT" property="inventoryCountingInfoNumber" />
    <id column="goods_bar_code" jdbcType="BIGINT" property="goodsBarCode" />
    <result column="purchase_price" jdbcType="DECIMAL" property="purchasePrice" />
    <result column="revenue_loss" jdbcType="INTEGER" property="revenueLoss" />
    <result column="inventory_amount" jdbcType="DECIMAL" property="inventoryAmount" />
    <result column="inventory_expiration_date" jdbcType="INTEGER" property="inventoryExpirationDate" />
    <result column="inventory_gain_loss_total_price" jdbcType="DECIMAL" property="inventoryGainLossTotalPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    inventory_counting_details_id, inventory_counting_info_number, goods_bar_code, purchase_price, 
    revenue_loss, inventory_amount, inventory_expiration_date, inventory_gain_loss_total_price
  </sql>
  <select id="selectByExample" parameterType="pers.wangshun.supermarketserver.model.InventoryGainLossDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inventory_gain_loss_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="pers.wangshun.supermarketserver.model.InventoryGainLossDetailsKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inventory_gain_loss_details
    where inventory_counting_details_id = #{inventoryCountingDetailsId,jdbcType=BIGINT}
      and inventory_counting_info_number = #{inventoryCountingInfoNumber,jdbcType=BIGINT}
      and goods_bar_code = #{goodsBarCode,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="pers.wangshun.supermarketserver.model.InventoryGainLossDetailsKey">
    delete from inventory_gain_loss_details
    where inventory_counting_details_id = #{inventoryCountingDetailsId,jdbcType=BIGINT}
      and inventory_counting_info_number = #{inventoryCountingInfoNumber,jdbcType=BIGINT}
      and goods_bar_code = #{goodsBarCode,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="pers.wangshun.supermarketserver.model.InventoryGainLossDetails">
    insert into inventory_gain_loss_details (inventory_counting_details_id, inventory_counting_info_number, 
      goods_bar_code, purchase_price, revenue_loss, 
      inventory_amount, inventory_expiration_date, 
      inventory_gain_loss_total_price)
    values (#{inventoryCountingDetailsId,jdbcType=BIGINT}, #{inventoryCountingInfoNumber,jdbcType=BIGINT}, 
      #{goodsBarCode,jdbcType=BIGINT}, #{purchasePrice,jdbcType=DECIMAL}, #{revenueLoss,jdbcType=INTEGER}, 
      #{inventoryAmount,jdbcType=DECIMAL}, #{inventoryExpirationDate,jdbcType=INTEGER}, 
      #{inventoryGainLossTotalPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="pers.wangshun.supermarketserver.model.InventoryGainLossDetails">
    insert into inventory_gain_loss_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="inventoryCountingDetailsId != null">
        inventory_counting_details_id,
      </if>
      <if test="inventoryCountingInfoNumber != null">
        inventory_counting_info_number,
      </if>
      <if test="goodsBarCode != null">
        goods_bar_code,
      </if>
      <if test="purchasePrice != null">
        purchase_price,
      </if>
      <if test="revenueLoss != null">
        revenue_loss,
      </if>
      <if test="inventoryAmount != null">
        inventory_amount,
      </if>
      <if test="inventoryExpirationDate != null">
        inventory_expiration_date,
      </if>
      <if test="inventoryGainLossTotalPrice != null">
        inventory_gain_loss_total_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="inventoryCountingDetailsId != null">
        #{inventoryCountingDetailsId,jdbcType=BIGINT},
      </if>
      <if test="inventoryCountingInfoNumber != null">
        #{inventoryCountingInfoNumber,jdbcType=BIGINT},
      </if>
      <if test="goodsBarCode != null">
        #{goodsBarCode,jdbcType=BIGINT},
      </if>
      <if test="purchasePrice != null">
        #{purchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="revenueLoss != null">
        #{revenueLoss,jdbcType=INTEGER},
      </if>
      <if test="inventoryAmount != null">
        #{inventoryAmount,jdbcType=DECIMAL},
      </if>
      <if test="inventoryExpirationDate != null">
        #{inventoryExpirationDate,jdbcType=INTEGER},
      </if>
      <if test="inventoryGainLossTotalPrice != null">
        #{inventoryGainLossTotalPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pers.wangshun.supermarketserver.model.InventoryGainLossDetails">
    update inventory_gain_loss_details
    <set>
      <if test="purchasePrice != null">
        purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="revenueLoss != null">
        revenue_loss = #{revenueLoss,jdbcType=INTEGER},
      </if>
      <if test="inventoryAmount != null">
        inventory_amount = #{inventoryAmount,jdbcType=DECIMAL},
      </if>
      <if test="inventoryExpirationDate != null">
        inventory_expiration_date = #{inventoryExpirationDate,jdbcType=INTEGER},
      </if>
      <if test="inventoryGainLossTotalPrice != null">
        inventory_gain_loss_total_price = #{inventoryGainLossTotalPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where inventory_counting_details_id = #{inventoryCountingDetailsId,jdbcType=BIGINT}
      and inventory_counting_info_number = #{inventoryCountingInfoNumber,jdbcType=BIGINT}
      and goods_bar_code = #{goodsBarCode,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.wangshun.supermarketserver.model.InventoryGainLossDetails">
    update inventory_gain_loss_details
    set purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      revenue_loss = #{revenueLoss,jdbcType=INTEGER},
      inventory_amount = #{inventoryAmount,jdbcType=DECIMAL},
      inventory_expiration_date = #{inventoryExpirationDate,jdbcType=INTEGER},
      inventory_gain_loss_total_price = #{inventoryGainLossTotalPrice,jdbcType=DECIMAL}
    where inventory_counting_details_id = #{inventoryCountingDetailsId,jdbcType=BIGINT}
      and inventory_counting_info_number = #{inventoryCountingInfoNumber,jdbcType=BIGINT}
      and goods_bar_code = #{goodsBarCode,jdbcType=BIGINT}
  </update>
</mapper>