<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.wangshun.supermarketserver.mapper.GoodsTransferDetailsMapper">
  <resultMap id="BaseResultMap" type="pers.wangshun.supermarketserver.model.GoodsTransferDetails">
    <id column="goods_transfer_details_id" jdbcType="BIGINT" property="goodsTransferDetailsId" />
    <result column="goods_transfer_info_id" jdbcType="BIGINT" property="goodsTransferInfoId" />
    <result column="goods_bar_code" jdbcType="BIGINT" property="goodsBarCode" />
    <result column="purchase_price" jdbcType="DECIMAL" property="purchasePrice" />
    <result column="purchase_details_quantity" jdbcType="DECIMAL" property="purchaseDetailsQuantity" />
    <result column="purchase_details_amount" jdbcType="DECIMAL" property="purchaseDetailsAmount" />
    <result column="purchase_details_expiration_date" jdbcType="INTEGER" property="purchaseDetailsExpirationDate" />
    <result column="purchase_details_total_price" jdbcType="DECIMAL" property="purchaseDetailsTotalPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_transfer_details_id, goods_transfer_info_id, goods_bar_code, purchase_price, 
    purchase_details_quantity, purchase_details_amount, purchase_details_expiration_date, 
    purchase_details_total_price
  </sql>
  <select id="selectByExample" parameterType="pers.wangshun.supermarketserver.model.GoodsTransferDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_transfer_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_transfer_details
    where goods_transfer_details_id = #{goodsTransferDetailsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from goods_transfer_details
    where goods_transfer_details_id = #{goodsTransferDetailsId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="pers.wangshun.supermarketserver.model.GoodsTransferDetails">
    insert into goods_transfer_details (goods_transfer_details_id, goods_transfer_info_id, 
      goods_bar_code, purchase_price, purchase_details_quantity, 
      purchase_details_amount, purchase_details_expiration_date, 
      purchase_details_total_price)
    values (#{goodsTransferDetailsId,jdbcType=BIGINT}, #{goodsTransferInfoId,jdbcType=BIGINT}, 
      #{goodsBarCode,jdbcType=BIGINT}, #{purchasePrice,jdbcType=DECIMAL}, #{purchaseDetailsQuantity,jdbcType=DECIMAL}, 
      #{purchaseDetailsAmount,jdbcType=DECIMAL}, #{purchaseDetailsExpirationDate,jdbcType=INTEGER}, 
      #{purchaseDetailsTotalPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="pers.wangshun.supermarketserver.model.GoodsTransferDetails">
    insert into goods_transfer_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsTransferDetailsId != null">
        goods_transfer_details_id,
      </if>
      <if test="goodsTransferInfoId != null">
        goods_transfer_info_id,
      </if>
      <if test="goodsBarCode != null">
        goods_bar_code,
      </if>
      <if test="purchasePrice != null">
        purchase_price,
      </if>
      <if test="purchaseDetailsQuantity != null">
        purchase_details_quantity,
      </if>
      <if test="purchaseDetailsAmount != null">
        purchase_details_amount,
      </if>
      <if test="purchaseDetailsExpirationDate != null">
        purchase_details_expiration_date,
      </if>
      <if test="purchaseDetailsTotalPrice != null">
        purchase_details_total_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsTransferDetailsId != null">
        #{goodsTransferDetailsId,jdbcType=BIGINT},
      </if>
      <if test="goodsTransferInfoId != null">
        #{goodsTransferInfoId,jdbcType=BIGINT},
      </if>
      <if test="goodsBarCode != null">
        #{goodsBarCode,jdbcType=BIGINT},
      </if>
      <if test="purchasePrice != null">
        #{purchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="purchaseDetailsQuantity != null">
        #{purchaseDetailsQuantity,jdbcType=DECIMAL},
      </if>
      <if test="purchaseDetailsAmount != null">
        #{purchaseDetailsAmount,jdbcType=DECIMAL},
      </if>
      <if test="purchaseDetailsExpirationDate != null">
        #{purchaseDetailsExpirationDate,jdbcType=INTEGER},
      </if>
      <if test="purchaseDetailsTotalPrice != null">
        #{purchaseDetailsTotalPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pers.wangshun.supermarketserver.model.GoodsTransferDetails">
    update goods_transfer_details
    <set>
      <if test="goodsTransferInfoId != null">
        goods_transfer_info_id = #{goodsTransferInfoId,jdbcType=BIGINT},
      </if>
      <if test="goodsBarCode != null">
        goods_bar_code = #{goodsBarCode,jdbcType=BIGINT},
      </if>
      <if test="purchasePrice != null">
        purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="purchaseDetailsQuantity != null">
        purchase_details_quantity = #{purchaseDetailsQuantity,jdbcType=DECIMAL},
      </if>
      <if test="purchaseDetailsAmount != null">
        purchase_details_amount = #{purchaseDetailsAmount,jdbcType=DECIMAL},
      </if>
      <if test="purchaseDetailsExpirationDate != null">
        purchase_details_expiration_date = #{purchaseDetailsExpirationDate,jdbcType=INTEGER},
      </if>
      <if test="purchaseDetailsTotalPrice != null">
        purchase_details_total_price = #{purchaseDetailsTotalPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where goods_transfer_details_id = #{goodsTransferDetailsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.wangshun.supermarketserver.model.GoodsTransferDetails">
    update goods_transfer_details
    set goods_transfer_info_id = #{goodsTransferInfoId,jdbcType=BIGINT},
      goods_bar_code = #{goodsBarCode,jdbcType=BIGINT},
      purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      purchase_details_quantity = #{purchaseDetailsQuantity,jdbcType=DECIMAL},
      purchase_details_amount = #{purchaseDetailsAmount,jdbcType=DECIMAL},
      purchase_details_expiration_date = #{purchaseDetailsExpirationDate,jdbcType=INTEGER},
      purchase_details_total_price = #{purchaseDetailsTotalPrice,jdbcType=DECIMAL}
    where goods_transfer_details_id = #{goodsTransferDetailsId,jdbcType=BIGINT}
  </update>
</mapper>