<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.wangshun.supermarketserver.mapper.InventoryWarningInfoMapper">
  <resultMap id="BaseResultMap" type="pers.wangshun.supermarketserver.model.InventoryWarningInfo">
    <id column="goods_bar_code" jdbcType="BIGINT" property="goodsBarCode" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="inventory_max" jdbcType="INTEGER" property="inventoryMax" />
    <result column="inventory_min" jdbcType="INTEGER" property="inventoryMin" />
    <result column="inventory_quantity" jdbcType="INTEGER" property="inventoryQuantity" />
    <result column="inventory_state" jdbcType="CHAR" property="inventoryState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_bar_code, goods_name, inventory_max, inventory_min, inventory_quantity, inventory_state
  </sql>
  <select id="selectByExample" parameterType="pers.wangshun.supermarketserver.model.InventoryWarningInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inventory_warning_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inventory_warning_info
    where goods_bar_code = #{goodsBarCode,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from inventory_warning_info
    where goods_bar_code = #{goodsBarCode,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="pers.wangshun.supermarketserver.model.InventoryWarningInfo">
    insert into inventory_warning_info (goods_bar_code, goods_name, inventory_max, 
      inventory_min, inventory_quantity, inventory_state
      )
    values (#{goodsBarCode,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, #{inventoryMax,jdbcType=INTEGER}, 
      #{inventoryMin,jdbcType=INTEGER}, #{inventoryQuantity,jdbcType=INTEGER}, #{inventoryState,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="pers.wangshun.supermarketserver.model.InventoryWarningInfo">
    insert into inventory_warning_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsBarCode != null">
        goods_bar_code,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="inventoryMax != null">
        inventory_max,
      </if>
      <if test="inventoryMin != null">
        inventory_min,
      </if>
      <if test="inventoryQuantity != null">
        inventory_quantity,
      </if>
      <if test="inventoryState != null">
        inventory_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsBarCode != null">
        #{goodsBarCode,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="inventoryMax != null">
        #{inventoryMax,jdbcType=INTEGER},
      </if>
      <if test="inventoryMin != null">
        #{inventoryMin,jdbcType=INTEGER},
      </if>
      <if test="inventoryQuantity != null">
        #{inventoryQuantity,jdbcType=INTEGER},
      </if>
      <if test="inventoryState != null">
        #{inventoryState,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pers.wangshun.supermarketserver.model.InventoryWarningInfo">
    update inventory_warning_info
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="inventoryMax != null">
        inventory_max = #{inventoryMax,jdbcType=INTEGER},
      </if>
      <if test="inventoryMin != null">
        inventory_min = #{inventoryMin,jdbcType=INTEGER},
      </if>
      <if test="inventoryQuantity != null">
        inventory_quantity = #{inventoryQuantity,jdbcType=INTEGER},
      </if>
      <if test="inventoryState != null">
        inventory_state = #{inventoryState,jdbcType=CHAR},
      </if>
    </set>
    where goods_bar_code = #{goodsBarCode,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.wangshun.supermarketserver.model.InventoryWarningInfo">
    update inventory_warning_info
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      inventory_max = #{inventoryMax,jdbcType=INTEGER},
      inventory_min = #{inventoryMin,jdbcType=INTEGER},
      inventory_quantity = #{inventoryQuantity,jdbcType=INTEGER},
      inventory_state = #{inventoryState,jdbcType=CHAR}
    where goods_bar_code = #{goodsBarCode,jdbcType=BIGINT}
  </update>
</mapper>